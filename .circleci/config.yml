version: 2.1

# orbs:
#   node: circleci/node@5.0.2
#   heroku: circleci/heroku@1.2.6

jobs:
  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: frontend-build
      - run:
          name: Build front-end
          command: |
            cd frontend
            npm install
            npm run build
      - save_cache:
          paths: frontend/node_modules
          key: frontend-build

  build-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: backend-build
      - run:
          name: Build back-end
          command: |
            cd backend
            npm install
            npm run build
      - save_cache:
          paths: backend/node_modules
          key: backend-build


  test-frontend:
    docker:
      - image: circleci/node:13.8.0
    # executor: node/default
    steps:
      - checkout
      - restore_cache:
          keys: frontend-test
      - run: 
          name: Test front-end
          command: |
            cd frontend
            npm install
            npm run test
      - save_cache:
          paths: frontend/node_modules
          key: frontend-test

  test-backend:
    docker:
      - image: circleci/node:13.8.0
    # executor: node/default
    steps:
      - checkout
      - restore_cache:
          keys: backend-test
      - run: 
          name: Test back-end
          command: |
            cd backend
            npm install
            npm run test
      - save_cache:
          paths: backend/node_modules
          key: backend-test


  scan-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: frontend-scan
      - run:
          name: Scan front-end
          command: |
            cd backend
            npm install
            npm audit --audit-level=critical
      - save_cache:
          paths: frontend/node_modules
          key: frontend-scan 


workflows:
  default:
    jobs:
      - build-frontend
      - build-backend
      - test-frontend:
          requires: 
            - build-frontend
      - test-backend:
          requires: 
            - build-frontend
      - scan-frontend:
          requires: 
            - build-frontend


